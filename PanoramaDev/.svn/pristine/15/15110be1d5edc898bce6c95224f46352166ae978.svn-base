/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pckDialog;

import ejb.CodePostalFacadeRemote;
import ejb.UtilisateurFacadeRemote;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import pckEntites.Adresse;
import pckEntites.CodePostal;
import pckEntites.Departement;
import pckEntites.PersonnelSoutien;
import pckEntites.Utilisateur;
import static pckValidation.Validation.retournerCodePostal;
import static pckValidation.Validation.retournerDate;
import static pckValidation.Validation.retournerMotPasse;
import static pckValidation.Validation.retournerNAS;
import static pckValidation.Validation.retournerNoTel;
import static pckValidation.Validation.validerCodePostal;
import static pckValidation.Validation.validerCourriel;
import static pckValidation.Validation.validerCredit;
import static pckValidation.Validation.validerDate;
import static pckValidation.Validation.validerFonction;
import static pckValidation.Validation.validerMotPasse;
import static pckValidation.Validation.validerNAS;
import static pckValidation.Validation.validerNoPoste;
import static pckValidation.Validation.validerNom;
import static pckValidation.Validation.validerTel;
import static pckValidation.Validation.validerPhotographie;

/**
 *
 * @author clocal
 */
public class DlgGererPersonnel extends javax.swing.JDialog {

    /**
     * Creates new form DlgGererPersonnel
     */
    PersonnelSoutien _pesonnelSoutien;
    Utilisateur _utilisateur;
    Adresse _adresse;
    CodePostal _codePostal;
    boolean result = false;
    List<Adresse> _lstAdresse;
    UtilisateurFacadeRemote _facadeUtilisateur;
    CodePostalFacadeRemote _facadeCodePostal;


    public DlgGererPersonnel(java.awt.Frame parent, boolean modal, PersonnelSoutien pPersonnelSoutien, UtilisateurFacadeRemote pFacadeUtilisateur, CodePostalFacadeRemote pFacadeCodePostal) {
        super(parent, modal);
        _pesonnelSoutien = pPersonnelSoutien;
        _lstAdresse = new ArrayList<>();
        _utilisateur = pPersonnelSoutien.getIdUtilisateurFK();
        _facadeUtilisateur = pFacadeUtilisateur;
        _facadeCodePostal = pFacadeCodePostal;
        if (_utilisateur != null) {
            _lstAdresse = _utilisateur.getAdresseList();
            if (_lstAdresse.size() > 0) {
                _adresse = _lstAdresse.get(0);
                _codePostal = _adresse.getIdCodePostalFK();
            }
        }
        initComponents();
        lblMessage.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        pnlTitre = new javax.swing.JPanel();
        lblTitre = new javax.swing.JLabel();
        pnlConten = new javax.swing.JPanel();
        lblNom = new javax.swing.JLabel();
        lblDateNaissance = new javax.swing.JLabel();
        lblTelephone = new javax.swing.JLabel();
        lblCourriel = new javax.swing.JLabel();
        lblNAS = new javax.swing.JLabel();
        lblCreditImpression = new javax.swing.JLabel();
        lblPrenom = new javax.swing.JLabel();
        lblMotDePasse = new javax.swing.JLabel();
        lblCellulaire = new javax.swing.JLabel();
        lblPhotographie = new javax.swing.JLabel();
        lblNumEmploye = new javax.swing.JLabel();
        txfNom = new javax.swing.JTextField();
        txfDateNaissance = new javax.swing.JTextField();
        txfTelephone = new javax.swing.JTextField();
        txfCourriel = new javax.swing.JTextField();
        txfNAS = new javax.swing.JTextField();
        txfCreImpression = new javax.swing.JTextField();
        txfPrenom = new javax.swing.JTextField();
        txfCellulaire = new javax.swing.JTextField();
        txfPhoto = new javax.swing.JTextField();
        txfMatricule = new javax.swing.JTextField();
        pwfMotPasse = new javax.swing.JPasswordField();
        txfFonction = new javax.swing.JTextField();
        txfPoste = new javax.swing.JTextField();
        lblPoste = new javax.swing.JLabel();
        lblFonction = new javax.swing.JLabel();
        txfNoCiv = new javax.swing.JTextField();
        txfNomRue = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txfCodePostal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbProvince = new javax.swing.JComboBox<>();
        txfVille = new javax.swing.JTextField();
        lblDispo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaDispo = new javax.swing.JTextArea();
        pnlBas = new javax.swing.JPanel();
        pnlMessage = new javax.swing.JPanel();
        lblMessage = new javax.swing.JLabel();
        pnlBoutons = new javax.swing.JPanel();
        btnModifier = new javax.swing.JButton();
        btnAnnuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gérer personnel");
        setModal(true);
        setPreferredSize(new java.awt.Dimension(738, 607));
        setResizable(false);

        lblTitre.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblTitre.setText("Gérer Personnel");
        pnlTitre.add(lblTitre);

        getContentPane().add(pnlTitre, java.awt.BorderLayout.PAGE_START);

        pnlConten.setPreferredSize(new java.awt.Dimension(638, 350));

        lblNom.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblNom.setText("Nom :");

        lblDateNaissance.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblDateNaissance.setText("Date naissance :");

        lblTelephone.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblTelephone.setText("Téléphone :");

        lblCourriel.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblCourriel.setText("Courriel :");

        lblNAS.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblNAS.setText("Numéro assurace social :");

        lblCreditImpression.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblCreditImpression.setText("Crédit impression :");

        lblPrenom.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblPrenom.setText("Prénom :");

        lblMotDePasse.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblMotDePasse.setText("Mot de passe :");

        lblCellulaire.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblCellulaire.setText("Cellulaire :");

        lblPhotographie.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblPhotographie.setText("Photographie :");

        lblNumEmploye.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblNumEmploye.setText("Numero d'employé :");

        txfNom.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfNom.setPreferredSize(new java.awt.Dimension(0, 25));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${utilisateur.nom}"), txfNom, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txfDateNaissance.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfDateNaissance.setPreferredSize(new java.awt.Dimension(0, 25));

        txfTelephone.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfTelephone.setPreferredSize(new java.awt.Dimension(0, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${utilisateur.telephone}"), txfTelephone, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txfCourriel.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfCourriel.setPreferredSize(new java.awt.Dimension(0, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${utilisateur.courriel}"), txfCourriel, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txfNAS.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfNAS.setPreferredSize(new java.awt.Dimension(0, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${utilisateur.nas}"), txfNAS, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txfCreImpression.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfCreImpression.setPreferredSize(new java.awt.Dimension(0, 25));

        txfPrenom.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfPrenom.setPreferredSize(new java.awt.Dimension(0, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${utilisateur.prenom}"), txfPrenom, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txfCellulaire.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfCellulaire.setPreferredSize(new java.awt.Dimension(0, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${utilisateur.cellulaire}"), txfCellulaire, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txfPhoto.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfPhoto.setPreferredSize(new java.awt.Dimension(0, 25));

        txfMatricule.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfMatricule.setPreferredSize(new java.awt.Dimension(0, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${pesonnelSoutien.numeroPersonnelPK}"), txfMatricule, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        pwfMotPasse.setPreferredSize(new java.awt.Dimension(0, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${utilisateur.motPasse}"), pwfMotPasse, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txfFonction.setPreferredSize(new java.awt.Dimension(55, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${pesonnelSoutien.fonction}"), txfFonction, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txfPoste.setPreferredSize(new java.awt.Dimension(4, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${pesonnelSoutien.numeroPosteSoutien}"), txfPoste, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        lblPoste.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblPoste.setText("Poste :");

        lblFonction.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblFonction.setText("Fonction :");

        txfNoCiv.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfNoCiv.setPreferredSize(new java.awt.Dimension(0, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${adresse.numeroCivique}"), txfNoCiv, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txfNomRue.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfNomRue.setPreferredSize(new java.awt.Dimension(0, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${adresse.rue}"), txfNomRue, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel4.setText("Rue :");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel2.setText("No civique :");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel3.setText("Ville :");

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel5.setText("Code Postal :");

        txfCodePostal.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        txfCodePostal.setToolTipText("");
        txfCodePostal.setPreferredSize(new java.awt.Dimension(0, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${codePostal.codePostal}"), txfCodePostal, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txfCodePostal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfCodePostalActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel6.setText("Province :");

        cmbProvince.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        cmbProvince.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alb", "CB", "IPE", "Man", "NB", "NE", "Ont", "Qc", "Sk", "TNL", "TNO", "Nt", "Yn" }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${codePostal.province}"), cmbProvince, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        txfVille.setPreferredSize(new java.awt.Dimension(6, 25));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${codePostal.ville}"), txfVille, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        lblDispo.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblDispo.setText("Disponibilité :");

        txaDispo.setColumns(20);
        txaDispo.setRows(5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${pesonnelSoutien.disponibilite}"), txaDispo, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(txaDispo);

        javax.swing.GroupLayout pnlContenLayout = new javax.swing.GroupLayout(pnlConten);
        pnlConten.setLayout(pnlContenLayout);
        pnlContenLayout.setHorizontalGroup(
            pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContenLayout.createSequentialGroup()
                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlContenLayout.createSequentialGroup()
                        .addContainerGap(51, Short.MAX_VALUE)
                        .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNAS, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCreditImpression, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDispo, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(4, 4, 4)
                        .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txfNAS, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txfCreImpression, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(130, 130, 130))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlContenLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTelephone)
                            .addComponent(jLabel5)
                            .addComponent(lblPrenom)
                            .addComponent(lblNumEmploye)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(lblPoste))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlContenLayout.createSequentialGroup()
                                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txfTelephone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txfCodePostal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txfVille, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                                    .addComponent(txfNoCiv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txfPrenom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txfMatricule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(23, 48, Short.MAX_VALUE)
                                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNom, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblMotDePasse, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pwfMotPasse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txfNom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txfNomRue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbProvince, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContenLayout.createSequentialGroup()
                                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlContenLayout.createSequentialGroup()
                                        .addComponent(txfPoste, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDateNaissance, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblCourriel, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblFonction, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblCellulaire, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(pnlContenLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(lblPhotographie)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txfPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txfCellulaire, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txfCourriel, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                        .addComponent(txfDateNaissance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txfFonction, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(52, 52, 52))
        );
        pnlContenLayout.setVerticalGroup(
            pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContenLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContenLayout.createSequentialGroup()
                        .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNumEmploye)
                            .addComponent(txfMatricule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNom))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPrenom)
                            .addComponent(txfPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pwfMotPasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMotDePasse)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txfNoCiv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txfNomRue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txfVille, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cmbProvince, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txfCodePostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfDateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDateNaissance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelephone)
                    .addComponent(txfTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfCellulaire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCellulaire))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfPoste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPoste)
                    .addComponent(txfFonction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFonction))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfCourriel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCourriel)
                    .addComponent(txfNAS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNAS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreditImpression)
                    .addComponent(txfCreImpression, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhotographie))
                .addGroup(pnlContenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlContenLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlContenLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(lblDispo))))
        );

        getContentPane().add(pnlConten, java.awt.BorderLayout.LINE_START);

        pnlBas.setMinimumSize(new java.awt.Dimension(0, 200));
        pnlBas.setPreferredSize(new java.awt.Dimension(738, 59));
        pnlBas.setLayout(new java.awt.BorderLayout());

        lblMessage.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        lblMessage.setText("Ceci est un message d'erreur");
        pnlMessage.add(lblMessage);

        pnlBas.add(pnlMessage, java.awt.BorderLayout.PAGE_START);

        btnModifier.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnModifier.setMnemonic('M');
        btnModifier.setText("Accepter");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });
        pnlBoutons.add(btnModifier);

        btnAnnuler.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnAnnuler.setMnemonic('A');
        btnAnnuler.setText("Annuler");
        btnAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnulerActionPerformed(evt);
            }
        });
        pnlBoutons.add(btnAnnuler);

        pnlBas.add(pnlBoutons, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(pnlBas, java.awt.BorderLayout.PAGE_END);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txfCodePostalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfCodePostalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfCodePostalActionPerformed

    private void btnAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnulerActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        result = false;
    }//GEN-LAST:event_btnAnnulerActionPerformed

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        // TODO add your handling code here:
        boolean lbNew = false;
        boolean lbValide = true;
        lbValide = validerLongeurChamp();
        if (lbValide) {
            //méthode pour valider les champs avec la class validation
            lbValide = validerDonnee();
            if (lbValide) {

                //création des classes
                // CodePostal
                 if(_codePostal == null)
                {
                    lbNew = true;
                    _codePostal = new CodePostal();
                }
                String codePostal = retournerCodePostal(txfCodePostal.getText());
                _codePostal.setCodePostal(codePostal);
                _codePostal.setVille(txfVille.getText());
                _codePostal.setProvince(cmbProvince.getItemAt(cmbProvince.getSelectedIndex()));
                _codePostal.setPays("Canada");
                CodePostal unCodePostal;
                try
                {
                    unCodePostal = _facadeCodePostal.findByCodePostal(_codePostal.getCodePostal());
                }
                catch(Exception e)
                {
                    if(lbNew)
                    {
                        _facadeCodePostal.create(_codePostal);
                    }
                    else
                    {
                        _facadeCodePostal.edit(_codePostal);
                    }
                    
                    unCodePostal = _facadeCodePostal.findByCodePostal(_codePostal.getCodePostal());
                }

                // Utilisateur
                if(_utilisateur == null)
                {
                    _utilisateur = new Utilisateur();
                }
                _utilisateur.setNom(txfNom.getText());
                _utilisateur.setPrenom(txfPrenom.getText());
                 _utilisateur.setDateNaissance(retournerDate(txfDateNaissance.getText()));
                String motPasse = "";
                try {
                    motPasse = retournerMotPasse(pwfMotPasse.getPassword());
                    _utilisateur.setMotPasse(motPasse);
                } catch (Exception e) {
                    lblMessage.setText("Erreur de conversion pour insersion dans la classe");
                }
                _utilisateur.setTelephone(retournerNoTel(txfTelephone.getText()));
                _utilisateur.setCellulaire(retournerNoTel(txfCellulaire.getText()));
                _utilisateur.setCourriel(txfCourriel.getText());
                _utilisateur.setPhotographie(null);
                _utilisateur.setNas(retournerNAS(txfNAS.getText()));
                _utilisateur.setCreditImpression(BigDecimal.valueOf(Double.parseDouble(txfCreImpression.getText())));
                Utilisateur unUtilisateur;
                try
                {
                    unUtilisateur = _facadeUtilisateur.findByNas(_utilisateur.getNas());
                    _facadeUtilisateur.edit(_utilisateur);
                }
                catch(Exception e)
                {
                    if(lbNew)
                    {
                        _facadeUtilisateur.create(_utilisateur);
                    }
                    else
                    {
                        _facadeUtilisateur.edit(_utilisateur);
                    }
                    unUtilisateur = _facadeUtilisateur.findByNas(_utilisateur.getNas());
                }
                
                

                // Adresse
                 if(_adresse == null)
                {
                    _adresse = new Adresse();
                }
                _adresse.setNumeroCivique(Integer.parseInt(txfNoCiv.getText()));
                _adresse.setRue(txfNomRue.getText());
                _adresse.setIdUtilisateurFK(unUtilisateur);
                _adresse.setIdCodePostalFK(unCodePostal);
                if(lbNew)
                {
                    List<Adresse> newLstAdresse = new ArrayList<Adresse>();
                    newLstAdresse.add(_adresse);
                    _utilisateur.setAdresseList(newLstAdresse);
                }
                else
                {
                    List<Adresse> oldLstAdresse = _utilisateur.getAdresseList();
                    oldLstAdresse.add(_adresse);
                    _utilisateur.setAdresseList(oldLstAdresse);
                }
                _facadeUtilisateur.edit(_utilisateur);

                //PersonnelSoutien
                if(_pesonnelSoutien == null)
                {
                    _pesonnelSoutien = new PersonnelSoutien();
                }
                _pesonnelSoutien.setNumeroPersonnelPK(txfMatricule.getText());
                _pesonnelSoutien.setNumeroPosteSoutien(txfPoste.getText());
                _pesonnelSoutien.setFonction(txfFonction.getText());
                _pesonnelSoutien.setIdUtilisateurFK(unUtilisateur);
                _pesonnelSoutien.setDisponibilite(txaDispo.getText());

            }
        }
        this.setVisible(false);
        result = true;
    }//GEN-LAST:event_btnModifierActionPerformed

    private boolean validerDonnee() {
        boolean lbTerminer = false;
        boolean lbValide = false;
        lbValide = validerNom(txfNom.getText());
        if (lbValide) {
            lbValide = validerNom(txfPrenom.getText());
            if (lbValide) {
                lbValide = validerMotPasse(retournerMotPasse(pwfMotPasse.getPassword()));
                if (lbValide) {
                    lbValide = validerNom(txfNomRue.getText());
                    if (lbValide) {
                        lbValide = validerNom(txfVille.getText());
                        if (lbValide) {
                            lbValide = validerCodePostal(txfCodePostal.getText());
                            if (lbValide) {
                                lbValide = validerDate(txfDateNaissance.getText());
                                if (lbValide) {
                                    lbValide = validerTel(txfTelephone.getText());
                                    if (lbValide) {
                                        lbValide = validerTel(txfCellulaire.getText());
                                        if (lbValide) {
                                            lbValide = validerNoPoste(txfPoste.getText());
                                            if (lbValide) {
                                                lbValide = validerPhotographie(txfPhoto.getText());
                                                if (lbValide) {
                                                    lbValide = validerNAS(txfNAS.getText());
                                                    if (lbValide) {
                                                        lbValide = validerCourriel(txfCourriel.getText());
                                                        if (lbValide) {
                                                            lbValide = validerCredit(txfCreImpression.getText());
                                                            if (lbValide) {
                                                                lbValide = validerFonction(txfFonction.getText());
                                                                if (lbValide) {
                                                                    lbTerminer = true;
                                                                } else {
                                                                    lblMessage.setText("Veuillez inscrire une fonction d'employé valide");
                                                                    txfFonction.requestFocus();
                                                                }
                                                            } else {
                                                                lblMessage.setText("Veuillez inscrire un montant de crédit valide");
                                                                txfCreImpression.requestFocus();
                                                            }
                                                        } else {
                                                            lblMessage.setText("Veuillez inscrire une adresse courriel valide");
                                                            txfCourriel.requestFocus();
                                                        }
                                                    } else {
                                                        lblMessage.setText("Veuillez inscrire un numéro de NAS valide");
                                                        txfNAS.requestFocus();
                                                    }
                                                } else {
                                                    lblMessage.setText("Veuillez inscrire un lien de photo valide");
                                                    txfPhoto.requestFocus();
                                                }
                                            } else {
                                                lblMessage.setText("Veuillez inscrire un numéro de poste valide");
                                                txfPoste.requestFocus();
                                            }
                                        } else {
                                            lblMessage.setText("Veuillez inscrire un numéro de téléphone valide");
                                            txfCellulaire.requestFocus();
                                        }
                                    } else {
                                        lblMessage.setText("Veuillez inscrire un numéro de téléphone valide ");
                                        txfTelephone.requestFocus();
                                    }
                                } else {
                                    lblMessage.setText("Veuillez inscrire une date valide aaaa/mm/jj");
                                    txfDateNaissance.requestFocus();
                                }
                            } else {
                                lblMessage.setText("Veuillez inscrire un code postal valide");
                                txfCodePostal.requestFocus();
                            }
                        } else {
                            lblMessage.setText("Veuillez inscrire un nom de ville valide");
                            txfVille.requestFocus();
                        }
                    } else {
                        lblMessage.setText("Veuillez inscrire un nom de rue valide");
                        txfNomRue.requestFocus();
                    }
                } else {
                    lblMessage.setText("Le mot de passe doit contenir uniquement des lettres et chiffres");
                    pwfMotPasse.requestFocus();
                }

            } else {
                lblMessage.setText("Veuillez inscrire un prénom valide sans caractères spéciaux");
                txfPrenom.requestFocus();
            }
        } else {
            lblMessage.setText("Veuillez inscrire un nom valide sans caractères spéciaux");
            txfNom.requestFocus();
        }
        return lbTerminer;
    }

    private boolean validerLongeurChamp() {
        boolean lbValide = false;
        if ((txfMatricule.getText().length() < 6) | (txfMatricule.getText().length() > 6)) {
            lblMessage.setText("Veuillez inscrire un code d'employé de 6 caractères.");
            txfMatricule.requestFocus();
        } else if ((txfNom.getText().length() < 3)) {
            lblMessage.setText("Veuillez inscrire un nom de plus de 2 caractères");
            txfNom.requestFocus();
        } else if (txfPrenom.getText().length() < 3) {
            lblMessage.setText("Veuillez inscrire un nom de plus de 2 caractères");
            txfPrenom.requestFocus();
        } else if (pwfMotPasse.getPassword().length < 4) {
            lblMessage.setText("Veuillez inscrire un mot de passe de plus de 3 caractères");
            pwfMotPasse.requestFocus();
        } else {
            boolean lbNumero = false;
            lbNumero = validerNumero(txfNoCiv.getText());
            if (!lbNumero) {
                lblMessage.setText("Veuillez inscrire un numéro valide dans le numéro civique");
                txfNoCiv.requestFocus();
            } else if (txfNomRue.getText().length() < 4) {
                lblMessage.setText("Veuillez inscrire un nom de rue de plus de 3 caractères");
                txfNomRue.requestFocus();
            } else if (txfVille.getText().length() < 4) {
                lblMessage.setText("Veuillez inscrire un nom de ville de plus de 4 caractères");
                txfVille.requestFocus();
            } else if ((txfCodePostal.getText().length() < 6) | (txfCodePostal.getText().length() > 7)) {
                lblMessage.setText("Veuillez inscrire un code postal valide");
                txfCodePostal.requestFocus();
            } else if (txfDateNaissance.getText().length() < 8) {
                lblMessage.setText("La date de naissance doit contenir au minimum 8 caractères");
                txfDateNaissance.requestFocus();
            } else if ((txfTelephone.getText().length() < 10) | (txfTelephone.getText().length() > 12)) {
                lblMessage.setText("Veuillez inscrire un numéro de téléphone valide de 10 à 12 caractères");
                txfTelephone.requestFocus();
            } else if ((txfCellulaire.getText().length() < 10) | (txfCellulaire.getText().length() > 12)) {
                lblMessage.setText("Veuillez inscrire un numéro de téléphone valide de 10 à 12 caractères");
                txfCellulaire.requestFocus();
            } else if ((txfPoste.getText().length() < 4) | (txfPoste.getText().length() > 4)) {
                lblMessage.setText("Veuillez inscrire un numéro de poste de 4 caractères");
                txfPoste.requestFocus();
            } else if (txfFonction.getText().length() < 2) {
                lblMessage.setText("Veuillez inscrire une fonction de minimum 3 caractères");
                txfFonction.requestFocus();
            } else if ((txfNAS.getText().length() < 9) | (txfNAS.getText().length() > 11)) {
                lblMessage.setText("Veuillez inscrire un NAS de longueur valide");
                txfNAS.requestFocus();
            } else if (txfCourriel.getText().length() < 6) {
                lblMessage.setText("Veuillez inscrire un courriel de plus de 6 caractère");
                txfCourriel.requestFocus();
            } else if (txfCreImpression.getText().length() < 2) {
                lblMessage.setText("Veuillez inscrire un montant dans le crédit impression");
                txfCreImpression.requestFocus();
            } else if (txfPhoto.getText().length() < 3) {
                lblMessage.setText("Veuillez inscrire un lien accès dans la photographie");
                txfPhoto.requestFocus();
            } else {
                lbValide = true;
            }
        }
        return lbValide;
    }

    private boolean validerNumero(String psChaine) {
        boolean lbOk = false;
        try {
            int liNumero = Integer.parseInt(psChaine);
            lbOk = true;
        } catch (Exception e) {
            lblMessage.setText("Veuillez inscrire un numéro civique valide");
            txfNoCiv.requestFocus();
        }
        return lbOk;
    }

    private boolean validerDateNaisance(String psChaine) {
        boolean lbValide = false;
        lbValide = validerDate(psChaine);

        return lbValide;
    }

    public Utilisateur getUtilisateur() {
        return _utilisateur;
    }

    public void setUtilisateur(Utilisateur _utilisateur) {
        this._utilisateur = _utilisateur;
    }

    public CodePostal getCodePostal() {
        return _codePostal;
    }

    public void setCodePostal(CodePostal _codePostal) {
        this._codePostal = _codePostal;
    }

    public PersonnelSoutien getPesonnelSoutien() {
        return _pesonnelSoutien;
    }

    public void setPesonnelSoutien(PersonnelSoutien _pesonnelSoutien) {
        this._pesonnelSoutien = _pesonnelSoutien;
    }

    public Adresse getAdresse() {
        return _adresse;
    }

    public void setAdresse(Adresse _adresse) {
        this._adresse = _adresse;
    }

    public boolean isResult() {
        return result;
    }

    public void setResult(boolean result) {
        this.result = result;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgGererPersonnel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgGererPersonnel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgGererPersonnel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgGererPersonnel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgGererPersonnel dialog = new DlgGererPersonnel(new javax.swing.JFrame(), true, null, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnnuler;
    private javax.swing.JButton btnModifier;
    private javax.swing.JComboBox<String> cmbProvince;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCellulaire;
    private javax.swing.JLabel lblCourriel;
    private javax.swing.JLabel lblCreditImpression;
    private javax.swing.JLabel lblDateNaissance;
    private javax.swing.JLabel lblDispo;
    private javax.swing.JLabel lblFonction;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblMotDePasse;
    private javax.swing.JLabel lblNAS;
    private javax.swing.JLabel lblNom;
    private javax.swing.JLabel lblNumEmploye;
    private javax.swing.JLabel lblPhotographie;
    private javax.swing.JLabel lblPoste;
    private javax.swing.JLabel lblPrenom;
    private javax.swing.JLabel lblTelephone;
    private javax.swing.JLabel lblTitre;
    private javax.swing.JPanel pnlBas;
    private javax.swing.JPanel pnlBoutons;
    private javax.swing.JPanel pnlConten;
    private javax.swing.JPanel pnlMessage;
    private javax.swing.JPanel pnlTitre;
    private javax.swing.JPasswordField pwfMotPasse;
    private javax.swing.JTextArea txaDispo;
    private javax.swing.JTextField txfCellulaire;
    private javax.swing.JTextField txfCodePostal;
    private javax.swing.JTextField txfCourriel;
    private javax.swing.JTextField txfCreImpression;
    private javax.swing.JTextField txfDateNaissance;
    private javax.swing.JTextField txfFonction;
    private javax.swing.JTextField txfMatricule;
    private javax.swing.JTextField txfNAS;
    private javax.swing.JTextField txfNoCiv;
    private javax.swing.JTextField txfNom;
    private javax.swing.JTextField txfNomRue;
    private javax.swing.JTextField txfPhoto;
    private javax.swing.JTextField txfPoste;
    private javax.swing.JTextField txfPrenom;
    private javax.swing.JTextField txfTelephone;
    private javax.swing.JTextField txfVille;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
