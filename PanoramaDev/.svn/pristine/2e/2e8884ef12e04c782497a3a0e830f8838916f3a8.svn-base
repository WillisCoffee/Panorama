/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panorama;

import java.awt.BasicStroke;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;

/**
 *
 * @author Kathy
 */
public class ImpressionHoraire implements Printable{

    @Override
    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException
    {
        int ret = NO_SUCH_PAGE; //Veillez à vous assurer que cette valeur est retournée lorsque le PrinterJob
                                //demande d'imprimer une page qui est passée la fin du document
        
        if (pageIndex == 0) //S'assurer qu'on nous a bien demandé d'imprimer la première page du document
        {
            //L'instance de Graphics reçue en paramètre est en fait une instance de Graphics2D
            //Comme cette classe offre plus de possibilités, on transtype le paramètre en Graphics2D
            Graphics2D g = (Graphics2D) graphics;
            
            //Déterminer le point central de la page
            int centreX = (int) (pageFormat.getWidth() / 2.0);
            int centreY = (int) (pageFormat.getHeight() / 2.0);
            
            //Changer la police utilisée pour imprimer le texte
            g.setFont(new Font("Impact", Font.PLAIN, 12));
            
            //Imprimer le texte
            g.drawString("WIN!!", centreX, centreY);
            
            //Changer la largeur du trait à 5 (Pixels? Points? mm?)
            //Avis aux intéressé(e)s, la classe BasicStroke permet aussi de réaliser
            //des lignes pointillées, voir les détails dans la javadoc!
            g.setStroke(new BasicStroke(5));
            
            //Dessiner un rectangle en dessinant les 4 lignes le délimitant
            g.drawLine(centreX - 10, centreY - 20, centreX + 35, centreY - 20);
            g.drawLine(centreX - 10, centreY - 20, centreX - 10, centreY + 10);
            g.drawLine(centreX - 10, centreY + 10, centreX + 35, centreY + 10);
            g.drawLine(centreX + 35, centreY - 20, centreX + 35, centreY + 10);
            
            //Puisqu'on n'a pas changé la largeur du trait, la forme suivante sera
            //aussi dessinée avec un trait de 5. Pour changer cet état de fait,
            //on doit, avant d'appeler drawOval(), redonne une largeur de trait 
            //différente
            g.drawOval(centreX - 20, centreY - 38, 65, 65);
            
            ret = PAGE_EXISTS;
        }

        return ret;


    }
    
}
